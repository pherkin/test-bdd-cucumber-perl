#!/usr/bin/env perl

=head1 NAME

pherkin - Execute tests written using Test::BDD::Cucumber

=head1 SYNOPSIS

 pherkin
 pherkin some/path/features/

=head1 DESCRIPTION

C<pherkin> accepts a single argument of a directory name, defaulting to
C<./features/> if none is specified. This directory is searched for feature
files (any file matching C<*.feature>) and step definition files (any file
matching C<*_steps.pl>). The step definitions are loaded, and then the features
executed.

Steps that pass are printed in green, those that fail in red, and those for
which there is no step definition - or that are skipped as the result of a
previous failure - as yellow.

C<pherkin> will exit with a non-zero status if (and only if) the overall result
is considered to be failing.

=head1 OPTIONS

 -l, --lib              Add 'lib' to @INC
 -b, --blib             Add 'blib/lib' and 'blib/arch' to @INC
 -I [dir]               Add given directory to @INC
 -o, --output           Output harness to use. Default to 'TermColor'. See 'Outputs'
 -t, --tags @tag        Run scenarios tagged with '@tag'
 -t, --tags @tag1,@tag2 Run scenarios tagged with '@tag1' and '@tag2'
 -t, --tags ~@tag       Run scenarios tagged without '@tag'
 --i18n LANG            List keywords for a particular language.
                        '--i18n help' lists all languages available.
 -h, --help             Print usage information.

=head1 OUTPUTS

C<pherkin> can output using any of the C<Test::BDD::Cucumber::Harness> output
modules. L<Test::BDD::Cucumber::TermColor> is the default, but
L<Test::BDD::Cucumber::TestBuilder> is also a reasonable option:

  pherkin -o TermColor some/path/feature   # The default
  pherkin -o TestBuilder some/path/feature # Test::Builder-type text output

=head1 AUTHOR

Peter Sergeant C<pete@clueball.com>

=head1 LICENSE

Copyright 2012-2014, Peter Sergeant; Licensed under the same terms as Perl

=cut

# See App::pherkin for documentation
use strict;
use warnings;
use FindBin::libs;
use App::pherkin;

BEGIN {
    if ( not -t STDOUT ) {
        $ENV{'ANSI_COLORS_DISABLED'} = 1;
    }
}

my $result = App::pherkin->new()->run( @ARGV );

exit( $result->result eq 'failing' );
